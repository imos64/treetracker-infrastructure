apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.peer.name }}
  namespace: {{ .Values.peer.namespace }}
  labels:
    app: {{ .Values.peer.name }}
spec:
  serviceName: {{ .Values.peer.name }}
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.peer.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.peer.name }}
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: {{ .Values.peer.name }}
          image: "{{ .Values.peer.image.repository }}:{{ .Values.peer.image.tag }}"
          imagePullPolicy: {{ .Values.peer.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.peer.ports.peer }}
              name: peer
            - containerPort: {{ .Values.peer.ports.chaincode }}
              name: chaincode
            - containerPort: {{ .Values.peer.ports.operations }}
              name: operations
          env:
            - name: CORE_PEER_ID
              value: {{ .Values.peer.peerID }}
            - name: CORE_PEER_LOCALMSPID
              value: {{ .Values.peer.mspID }}
            - name: CORE_PEER_ADDRESS
              value: "{{ .Values.peer.name }}:{{ .Values.peer.ports.peer }}"
            - name: CORE_PEER_GOSSIP_EXTERNALENDPOINT
              value: {{ .Values.peer.gossip.externalEndpoint }}
            - name: CORE_PEER_GOSSIP_BOOTSTRAP
              value: {{ .Values.peer.gossip.bootstrap }}
            - name: CORE_PEER_MSPCONFIGPATH
              value: {{ .Values.peer.msp.configPath }}
            - name: CORE_PEER_TLS_ENABLED
              value: "{{ .Values.peer.tls.enabled }}"
            - name: CORE_PEER_TLS_CERT_FILE
              value: {{ printf "%s/%s" .Values.peer.tls.configPath .Values.peer.tls.certFile }}
            - name: CORE_PEER_TLS_KEY_FILE
              value: {{ printf "%s/%s" .Values.peer.tls.configPath .Values.peer.tls.keyFile }}
            - name: CORE_PEER_TLS_ROOTCERT_FILE
              value: "/etc/hyperledger/fabric/msp/cacerts/greenstand-ca-hlf-ca-svc-cluster-local-7054-greenstand-ca.pem"
            - name: FABRIC_LOGGING_SPEC
              value: DEBUG
{{- with .Values.peer.env }}
{{- range . }}
            - name: {{ .name }}
              value: {{ .value | quote }}
{{- end }}
{{- end }}
          volumeMounts:
            - name: signcerts
              mountPath: /etc/hyperledger/fabric/msp/signcerts
              readOnly: true
            - name: cacerts
              mountPath: /etc/hyperledger/fabric/msp/cacerts
              readOnly: true
            - name: config
              mountPath: /etc/hyperledger/fabric/msp/config.yaml
              subPath: config.yaml
              readOnly: true
            - name: keystore
              mountPath: /etc/hyperledger/fabric/msp/keystore
              readOnly: false
            - name: tls
              mountPath: {{ .Values.peer.tls.configPath }}
              readOnly: true
            - name: admincerts
              mountPath: /etc/hyperledger/fabric/msp/admincerts
              readOnly: true
            - name: tlscacerts
              mountPath: /etc/hyperledger/fabric/msp/tlscacerts
              readOnly: true
            - name: tlsintermediatecerts
              mountPath: /etc/hyperledger/fabric/msp/tlsintermediatecerts
              readOnly: true
            - name: peer-data
              mountPath: /var/hyperledger/production
              readOnly: false
      volumes:
        - name: signcerts
          secret:
            secretName: {{ .Values.peer.msp.secret }}
            items:
              - key: cert.pem
                path: cert.pem
        - name: cacerts
          secret:
            secretName: {{ .Values.peer.msp.secret }}
            items:
              - key: greenstand-ca-hlf-ca-svc-cluster-local-7054-greenstand-ca.pem
                path: greenstand-ca-hlf-ca-svc-cluster-local-7054-greenstand-ca.pem
        - name: config
          secret:
            secretName: {{ .Values.peer.msp.secret }}
            items:
              - key: config.yaml
                path: config.yaml
        - name: keystore
          secret:
            secretName: {{ .Values.peer.msp.secret }}
            items:
              - key: key.pem
                path: key.pem
        - name: tls
          secret:
            secretName: {{ .Values.peer.tls.secret }}
            defaultMode: 420
        - name: admincerts
          secret:
            secretName: {{ .Values.peer.msp.secret }}
            items:
              - key: cert.pem
                path: admincert.pem
        - name: tlscacerts
          secret:
            secretName: {{ .Values.peer.tls.secret }}
            items:
              - key: ca.crt
                path: tlsroot.pem
        - name: tlsintermediatecerts
          secret:
            secretName: {{ .Values.peer.tls.secret }}
            items:
              - key: ca.crt
                path: tlsintermediate.pem
  volumeClaimTemplates:
    - metadata:
        name: peer-data
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: {{ .Values.peer.storage.storageClass }}
        resources:
          requests:
            storage: {{ .Values.peer.storage.size }}
